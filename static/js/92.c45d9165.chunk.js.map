{"version":3,"file":"static/js/92.c45d9165.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.js","services/movieApi.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Section = styled.section`\n  padding-top: 24px;\n  padding-bottom: 24px;\n`;\n\nconst Container = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 1280px;\n`;\n\nconst MovieWrapper = styled.div`\n  display: flex;\n  gap: 32px;\n\n  margin-top: 24px;\n  margin-bottom: 24px;\n\n  img {\n    width: 268px;\n  }\n  p {\n    margin-bottom: 16px;\n  }\n`;\n\nconst Title = styled.h1`\n  margin-bottom: 36px;\n\n  font-size: 42px;\n`;\nconst GenreWrapper = styled.p`\n  display: flex;\n  gap: 12px;\n`;\n\nconst Genre = styled.span`\n  padding: 4px 12px;\n\n  font-size: 16px;\n  line-height: 1.4;\n\n  border: 1px solid #ec9706;\n  border-radius: 25px;\n`;\n\nconst AdditionalInfo = styled.div`\n  margin-bottom: 24px;\n  h2 {\n    margin-bottom: 24px;\n\n    font-size: 36px;\n  }\n  ul {\n    display: flex;\n    gap: 16px;\n  }\n`;\n\nconst NavItem = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  padding-top: 8px;\n  padding-bottom: 8px;\n\n  text-transform: capitalize;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &.active {\n    color: #ec9706;\n  }\n\n  &:hover:not(.active),\n  &:focus-visible:not(.active) {\n    color: #ec9706;\n  }\n`;\n\nexport {\n  Section,\n  Container,\n  MovieWrapper,\n  Title,\n  GenreWrapper,\n  Genre,\n  AdditionalInfo,\n  NavItem,\n};\n","import { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { IoIosPeople, IoIosPaper, IoIosArrowDropleft } from 'react-icons/io';\nimport { getMovieById } from 'services/movieApi';\nimport {\n  Section,\n  Container,\n  MovieWrapper,\n  Title,\n  GenreWrapper,\n  Genre,\n  AdditionalInfo,\n  NavItem,\n} from './MovieDetails.styled';\nimport defaultPicture from '../../images/default-movie.jpg';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    getMovieById(movieId).then(setMovie);\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n\n  const { genres, overview, poster_path, release_date, title, vote_average } =\n    movie;\n\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <main>\n      <Section>\n        <Container>\n          <NavItem to={backLinkHref}>\n            <IoIosArrowDropleft size={24} />\n            <span>Go back</span>\n          </NavItem>\n          <MovieWrapper>\n            <img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : defaultPicture\n              }\n              alt={title}\n            />\n            <div>\n              <Title>\n                {title} ({new Date(release_date).getFullYear()})\n              </Title>\n              <p>Use Score: {Math.round(vote_average * 10)}%</p>\n              <p>\n                <b>Overview</b>\n              </p>\n              <p>{overview}</p>\n              <p>\n                <b>Genres</b>\n              </p>\n              <GenreWrapper>\n                {genres.map(({ name }) => (\n                  <Genre key={name}>{name}</Genre>\n                ))}\n              </GenreWrapper>\n            </div>\n          </MovieWrapper>\n          <AdditionalInfo>\n            <h2>Additional information</h2>\n            <ul>\n              <li>\n                <NavItem to=\"cast\" state={{ from: backLinkHref }}>\n                  <IoIosPeople size={24} />\n                  <span>Cast</span>\n                </NavItem>\n              </li>\n              <li>\n                <NavItem to=\"reviews\" state={{ from: backLinkHref }}>\n                  <IoIosPaper size={24} />\n                  <span>Reviews</span>\n                </NavItem>\n              </li>\n            </ul>\n          </AdditionalInfo>\n          <Suspense\n            fallback={<div>Please wait while minions do their work...</div>}\n          >\n            <Outlet />\n          </Suspense>\n        </Container>\n      </Section>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'bfcd7a06a5bb09fb5aafe756d2f60f73';\n\nasync function getTrendingMovies() {\n  const response = await fetch(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  if (!response.ok) {\n    throw new Error(response.status);\n  }\n  return await response.json();\n}\n\nasync function getMovieById(id) {\n  const response = await fetch(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n  if (!response.ok) {\n    throw new Error(response.status);\n  }\n  return await response.json();\n}\n\nasync function getMovieCast(id) {\n  const response = await fetch(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  if (!response.ok) {\n    throw new Error(response.status);\n  }\n  return await response.json();\n}\n\nasync function getMovieReviews(id) {\n  const response = await fetch(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  if (!response.ok) {\n    throw new Error(response.status);\n  }\n  return await response.json();\n}\n\nasync function getMovieByQuery(query) {\n  const response = await fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  if (!response.ok) {\n    throw new Error(response.status);\n  }\n  return await response.json();\n}\n\nexport {\n  getTrendingMovies,\n  getMovieById,\n  getMovieCast,\n  getMovieReviews,\n  getMovieByQuery,\n};\n"],"names":["Section","styled","Container","MovieWrapper","Title","GenreWrapper","Genre","AdditionalInfo","NavItem","NavLink","movieId","useParams","useState","movie","setMovie","location","useLocation","useEffect","getMovieById","then","genres","overview","poster_path","release_date","title","vote_average","backLinkHref","state","from","to","size","src","defaultPicture","alt","Date","getFullYear","Math","round","map","name","Suspense","fallback","BASE_URL","API_KEY","getTrendingMovies","fetch","response","ok","Error","status","json","id","getMovieCast","getMovieReviews","getMovieByQuery","query"],"sourceRoot":""}