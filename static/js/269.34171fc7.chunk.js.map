{"version":3,"file":"static/js/269.34171fc7.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.js","components/Notification/Notification.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js","services/movieApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  background-color: rgba(24, 22, 21, 0.9);\n`;\n\nconst Container = styled.div`\n  position: fixed;\n  top: 50%;\n  right: 50%;\n  transform: translate(50%, -50%);\n`;\n\nconst LoaderSpinner = styled.div`\n  position: relative;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 200px;\n  height: 200px;\n`;\n\nconst Item = styled.div`\n  position: absolute;\n  border-radius: 50%;\n  border-style: solid;\n  animation: rotate 3s linear infinite;\n\n  @keyframes rotate {\n    to {\n      transform: rotate(1turn);\n    }\n  }\n\n  :nth-child(1) {\n    width: 100%;\n    height: 100%;\n    color: rgb(255, 136, 0);\n    border-color: currentColor transparent;\n    border-width: 2px 2px 0px 0px;\n    --deg: -45deg;\n    animation-direction: normal;\n  }\n\n  :nth-child(2) {\n    width: 70%;\n    height: 70%;\n    color: rgb(245, 211, 21);\n\n    border-color: currentColor transparent;\n    border-width: 2px 0px 0px 2px;\n    --deg: -135deg;\n    animation-direction: reverse;\n  }\n`;\n\nconst Circle = styled.div`\n  position: absolute;\n  width: 50%;\n  height: 1px;\n  top: 50%;\n  left: 50%;\n  background-color: transparent;\n  transform: rotate(var(--deg));\n  transform-origin: left;\n\n  ::before {\n    content: '';\n\n    position: absolute;\n    top: -5px;\n    right: -5px;\n    width: 10px;\n    height: 10px;\n\n    background-color: currentColor;\n    border-radius: 50%;\n    box-shadow: 0 0 20px, 0 0 40px, 0 0 60px, 0 0 80px, 0 0 100px,\n      0 0 0 5px rgba(255, 255, 0, 0.1);\n  }\n`;\n\nexport { Wrapper, Container, LoaderSpinner, Item, Circle };\n","import {\n  Wrapper,\n  Container,\n  LoaderSpinner,\n  Item,\n  Circle,\n} from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <Wrapper>\n      <Container>\n        <LoaderSpinner>\n          <Item>\n            <Circle></Circle>\n          </Item>\n          <Item>\n            <Circle></Circle>\n          </Item>\n        </LoaderSpinner>\n      </Container>\n    </Wrapper>\n  );\n};\n","import PropTypes from 'prop-types';\n\nexport const Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nconst Blockquote = styled.blockquote`\n  position: relative;\n  font-size: 16px;\n  font-style: italic;\n  letter-spacing: 1px;\n  line-height: 1.2;\n  text-align: center;\n\n  p {\n    margin-top: 16px;\n  }\n\n  svg {\n    margin-right: 16px;\n  }\n\n  cite {\n    font-style: normal;\n  }\n`;\n\nexport { Blockquote };\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { FaQuoteLeft } from 'react-icons/fa';\nimport { getMovieReviews } from 'services/movieApi';\nimport { Loader } from 'components/Loader';\nimport { Notification } from 'components/Notification';\nimport { Blockquote } from './Reviews.styled';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  REJECTED: 'rejected',\n  RESOLVED: 'resolved',\n};\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n    getMovieReviews(movieId)\n      .then(({ results }) => {\n        if (!results.length) {\n          setError('We do not have any reviews for this movie :(');\n          setStatus(Status.REJECTED);\n          return;\n        }\n        setReviews(results);\n        setStatus(Status.RESOLVED);\n      })\n      .catch(error => {\n        setError(error);\n        setStatus(Status.REJECTED);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {status === Status.PENDING && <Loader />}\n      {status === Status.REJECTED && <Notification message={error} />}\n      {status === Status.RESOLVED && (\n        <ul>\n          {reviews.map(({ id, author, content, url }) => (\n            <li key={id}>\n              <Blockquote cite={url}>\n                <cite>Author: {author}</cite>\n                <p>\n                  <FaQuoteLeft size={24} />\n                  {content}\n                </p>\n              </Blockquote>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'bfcd7a06a5bb09fb5aafe756d2f60f73';\n\nasync function getTrendingMovies() {\n  const response = await fetch(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  if (response.ok) {\n    return await response.json();\n  }\n  return await Promise.reject(\n    new Error(\"Oops, something went wrong... We can't load trending movies :(\")\n  );\n}\n\nasync function getMovieById(id) {\n  const response = await fetch(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n  if (response.ok) {\n    return await response.json();\n  }\n  return await Promise.reject(\n    new Error(\n      'We are sorry, but we did not find any information about movie :('\n    )\n  );\n}\n\nasync function getMovieCast(id) {\n  const response = await fetch(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  if (response.ok) {\n    return await response.json();\n  }\n  return await Promise.reject(\n    new Error('We are sorry, but we did not find any information about cast :(')\n  );\n}\n\nasync function getMovieReviews(id) {\n  const response = await fetch(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  if (response.ok) {\n    return await response.json();\n  }\n  return await Promise.reject(\n    new Error('We do not have any reviews for this movie :(')\n  );\n}\n\nasync function getMovieByQuery(query) {\n  const response = await fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  if (response.ok) {\n    return await response.json();\n  }\n  return await Promise.reject(\n    new Error(`No results containing ${query} were found.`)\n  );\n}\n\nexport {\n  getTrendingMovies,\n  getMovieById,\n  getMovieCast,\n  getMovieReviews,\n  getMovieByQuery,\n};\n"],"names":["Wrapper","styled","Container","LoaderSpinner","Item","Circle","Loader","Notification","message","Blockquote","Status","movieId","useParams","useState","reviews","setReviews","error","setError","status","setStatus","useEffect","getMovieReviews","then","results","length","catch","map","id","author","content","url","cite","size","BASE_URL","API_KEY","getTrendingMovies","fetch","response","ok","json","Promise","reject","Error","getMovieById","getMovieCast","getMovieByQuery","query"],"sourceRoot":""}