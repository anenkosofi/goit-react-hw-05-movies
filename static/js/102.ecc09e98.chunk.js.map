{"version":3,"file":"static/js/102.ecc09e98.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.js","pages/Movies/Movies.styled.js","pages/Movies/Movies.js","services/movieApi.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  row-gap: 20px;\n  column-gap: 8px;\n`;\n\nconst ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  flex-basis: calc((100% - 32px) / 5);\n`;\n\nconst Item = styled(NavLink)`\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover:not(.active),\n  &:focus-visible:not(.active) {\n    transform: scale(1.1);\n    color: #ec9706;\n  }\n`;\n\nconst Poster = styled.img`\n  height: 365px;\n  object-fit: cover;\n`;\n\nconst MovieInfo = styled.div`\n  padding: 12px 4px;\n`;\n\nexport { List, ListItem, Item, Poster, MovieInfo };\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { List, ListItem, Item, Poster, MovieInfo } from './MovieList.styled';\nimport defaultPicture from '../../images/default-movie.jpg';\n\nexport const MovieList = ({ items }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {items.map(({ id, poster_path, title }) => (\n        <ListItem key={id}>\n          <Item to={`/movies/${id}`} state={{ from: location }}>\n            <Poster\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : defaultPicture\n              }\n              alt={title}\n            />\n            <MovieInfo>\n              <p>{title}</p>\n            </MovieInfo>\n          </Item>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.oneOfType([\n        PropTypes.string.isRequired,\n        PropTypes.oneOf([null]).isRequired,\n      ]),\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nconst Section = styled.section`\n  padding-top: 36px;\n  padding-bottom: 36px;\n\n  text-align: center;\n`;\n\nconst Container = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 1280px;\n`;\n\nconst Form = styled.form`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  margin: 0 auto;\n  margin-bottom: 36px;\n  width: 510px;\n\n  border-radius: 15px;\n`;\nconst Field = styled.div`\n  position: relative;\n`;\n\nconst Label = styled.label`\n  position: absolute;\n  top: 50%;\n  left: 16px;\n  transform: translateY(-50%);\n\n  padding: 0 4px;\n\n  font-size: 16px;\n\n  color: #fefefe;\n\n  pointer-events: none;\n\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  Input:focus ~ &,\n  Input:not(:placeholder-shown) ~ & {\n    transform: translateY(-34px) scale(0.8);\n\n    color: #ec9706;\n    background-color: #212121;\n  }\n\n  Input:not(:focus) ~ & {\n    color: #fefefe;\n  }\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  height: 50px;\n  padding: 8px 16px;\n  padding-right: 42px;\n\n  font-size: 16px;\n  letter-spacing: 1.4px;\n\n  color: #ec9706;\n  background-color: transparent;\n\n  border: 1px solid #fefefe;\n  border-radius: 10px;\n  outline: none;\n\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:focus {\n    border-color: #ec9706;\n    box-shadow: 0px 8px 12px -4px rgba(236, 151, 6, 0.32);\n  }\n\n  &:not(:focus) {\n    color: #fefefe;\n  }\n`;\n\nconst Button = styled.button`\n  position: absolute;\n  top: 50%;\n  right: 16px;\n  transform: translateY(-50%);\n  padding: 0;\n\n  color: #fefefe;\n  background-color: transparent;\n\n  border: none;\n\n  cursor: pointer;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    color: #ec9706;\n  }\n`;\n\nexport { Section, Container, Form, Field, Label, Input, Button };\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { BsSearch } from 'react-icons/bs';\nimport { getMovieByQuery } from 'services/movieApi';\nimport { MovieList } from 'components/MovieList';\nimport {\n  Section,\n  Container,\n  Form,\n  Field,\n  Label,\n  Input,\n  Button,\n} from './Movies.styled';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [queryString, setQueryString] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryParam = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    getMovieByQuery(query).then(({ results }) => {\n      if (!results.length) {\n        alert(`No result containing ${query} were found.`);\n        return;\n      }\n      setMovies(results);\n    });\n  }, [query]);\n\n  useEffect(() => {\n    if (!queryParam) {\n      return;\n    }\n    getMovieByQuery(queryParam).then(({ results }) => setMovies(results));\n  }, [queryParam]);\n\n  const handleChange = e => {\n    const { value } = e.currentTarget;\n    setQueryString(value.trim().toLowerCase());\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (!queryString) {\n      alert('Search box cannot be empty. Please enter the word.');\n      return;\n    }\n    setQuery(queryString);\n    setSearchParams({ query: queryString });\n\n    setQueryString('');\n  };\n\n  return (\n    <main>\n      <Section>\n        <Container>\n          <Form onSubmit={submitHandler}>\n            <Field>\n              <Input\n                type=\"text\"\n                name=\"query\"\n                value={queryString}\n                autoComplete=\"off\"\n                placeholder=\" \"\n                onChange={handleChange}\n              />\n              <Label>Search movies</Label>\n            </Field>\n            <Button type=\"submit\">\n              <BsSearch size={24} />\n            </Button>\n          </Form>\n          {movies.length > 0 && <MovieList items={movies} />}\n        </Container>\n      </Section>\n    </main>\n  );\n};\n\nexport default Movies;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'bfcd7a06a5bb09fb5aafe756d2f60f73';\n\nasync function getTrendingMovies() {\n  const response = await fetch(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  if (!response.ok) {\n    throw new Error(response.status);\n  }\n  return await response.json();\n}\n\nasync function getMovieById(id) {\n  const response = await fetch(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n  if (!response.ok) {\n    throw new Error(response.status);\n  }\n  return await response.json();\n}\n\nasync function getMovieCast(id) {\n  const response = await fetch(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  if (!response.ok) {\n    throw new Error(response.status);\n  }\n  return await response.json();\n}\n\nasync function getMovieReviews(id) {\n  const response = await fetch(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  if (!response.ok) {\n    throw new Error(response.status);\n  }\n  return await response.json();\n}\n\nasync function getMovieByQuery(query) {\n  const response = await fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  if (!response.ok) {\n    throw new Error(response.status);\n  }\n  return await response.json();\n}\n\nexport {\n  getTrendingMovies,\n  getMovieById,\n  getMovieCast,\n  getMovieReviews,\n  getMovieByQuery,\n};\n"],"names":["List","styled","ListItem","Item","NavLink","Poster","MovieInfo","MovieList","items","location","useLocation","map","id","poster_path","title","to","state","from","src","defaultPicture","alt","Section","Container","Form","Field","Label","Input","Button","useState","query","setQuery","queryString","setQueryString","movies","setMovies","useSearchParams","searchParams","setSearchParams","queryParam","get","useEffect","getMovieByQuery","then","results","length","alert","onSubmit","e","preventDefault","type","name","value","autoComplete","placeholder","onChange","currentTarget","trim","toLowerCase","size","BASE_URL","API_KEY","getTrendingMovies","fetch","response","ok","Error","status","json","getMovieById","getMovieCast","getMovieReviews"],"sourceRoot":""}