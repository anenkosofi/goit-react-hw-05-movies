{"version":3,"file":"static/js/344.b932e374.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.js","pages/Home/Home.styled.js","pages/Home/Home.js","services/movieApi.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  row-gap: 20px;\n  column-gap: 8px;\n`;\n\nconst ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  flex-basis: calc((100% - 32px) / 5);\n`;\n\nconst Item = styled(NavLink)`\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover:not(.active),\n  &:focus-visible:not(.active) {\n    transform: scale(1.1);\n    color: #ec9706;\n  }\n`;\n\nconst Poster = styled.img`\n  height: 365px;\n  object-fit: cover;\n`;\n\nconst MovieInfo = styled.div`\n  padding: 12px 4px;\n`;\n\nexport { List, ListItem, Item, Poster, MovieInfo };\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { List, ListItem, Item, Poster, MovieInfo } from './MovieList.styled';\nimport defaultPicture from '../../images/default-movie.jpg';\n\nexport const MovieList = ({ items }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {items.map(({ id, poster_path, title }) => (\n        <ListItem key={id}>\n          <Item to={`/movies/${id}`} state={{ from: location }}>\n            <Poster\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : defaultPicture\n              }\n              alt={title}\n            />\n            <MovieInfo>\n              <p>{title}</p>\n            </MovieInfo>\n          </Item>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.oneOfType([\n        PropTypes.string.isRequired,\n        PropTypes.oneOf([null]).isRequired,\n      ]),\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nconst Section = styled.section`\n  padding-top: 36px;\n  padding-bottom: 36px;\n\n  text-align: center;\n`;\n\nconst Container = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 1280px;\n`;\n\nconst Heading = styled.h1`\n  margin-bottom: 32px;\n\n  font-size: 56px;\n`;\n\nexport { Section, Container, Heading };\n","import { useState, useEffect } from 'react';\nimport { getTrendingMovies } from '../../services/movieApi';\nimport { MovieList } from 'components/MovieList';\nimport { Section, Container, Heading } from './Home.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getTrendingMovies().then(({ results }) => setMovies(results));\n  }, []);\n\n  return (\n    <main>\n      <Section>\n        <Container>\n          <Heading>Trending today</Heading>\n          <MovieList items={movies} />\n        </Container>\n      </Section>\n    </main>\n  );\n};\n\nexport default Home;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'bfcd7a06a5bb09fb5aafe756d2f60f73';\n\nasync function getTrendingMovies() {\n  const response = await fetch(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  if (!response.ok) {\n    throw new Error(response.status);\n  }\n  return await response.json();\n}\n\nasync function getMovieById(id) {\n  const response = await fetch(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n  if (!response.ok) {\n    throw new Error(response.status);\n  }\n  return await response.json();\n}\n\nasync function getMovieCast(id) {\n  const response = await fetch(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  if (!response.ok) {\n    throw new Error(response.status);\n  }\n  return await response.json();\n}\n\nasync function getMovieReviews(id) {\n  const response = await fetch(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  if (!response.ok) {\n    throw new Error(response.status);\n  }\n  return await response.json();\n}\n\nasync function getMovieByQuery(query) {\n  const response = await fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  if (!response.ok) {\n    throw new Error(response.status);\n  }\n  return await response.json();\n}\n\nexport {\n  getTrendingMovies,\n  getMovieById,\n  getMovieCast,\n  getMovieReviews,\n  getMovieByQuery,\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["List","styled","ListItem","Item","NavLink","Poster","MovieInfo","MovieList","items","location","useLocation","map","id","poster_path","title","to","state","from","src","defaultPicture","alt","Section","Container","Heading","useState","movies","setMovies","useEffect","getTrendingMovies","then","results","BASE_URL","API_KEY","fetch","response","ok","Error","status","json","getMovieById","getMovieCast","getMovieReviews","getMovieByQuery","query","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}